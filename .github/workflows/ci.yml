on: [ push, pull_request ]
name: Continuous Integration

jobs:
  inspect-code:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install .NET 3.1.x LTS
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"

      - name: Install .NET 6.0.x LTS
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: Restore .NET Tools
        run: dotnet tool restore

      - name: Restore .NET Packages
        run: dotnet restore yambar-templates.sln

      - name: Restore InspectCode Cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/inspectcode
          key: inspectcode-${{ hashFiles('.config/dotnet-tools.json', '.github/workflows/ci.yml', 'yambar-templates.sln*', '.editorconfig') }}

      - name: .NET Code Style
        run: dotnet build -c Debug -warnaserror yambar.Templates.csproj -p:EnforceCodeStyleInBuild=true

      - name: Inspect Code
        run: dotnet jb inspectcode $(pwd)/yambar-templates.slnf --no-build --output="inspectcodereport.xml" --caches-home="inspectcode" --verbosity=WARN

      - name: NVika
        run: dotnet nvika parsereport "${{github.workspace}}/inspectcodereport.xml" --treatwarningsaserrors
  test:
    name: Test
    runs-on: ${{matrix.os.fullName}}
    strategy:
      fail-fast: true
      matrix:
        os:
          - { prettyName: Windows, fullName: windows-latest}
          - { prettyName: macOS, fullName: macos-latest}
          - { prettyName: Ubuntu, fullName: ubuntu-latest}
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install .NET 6.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"

      - name: Install libavformat-dev
        if: ${{matrix.os.fullname == 'ubuntu-latest'}}
        run: |
         sudo apt-get update && \
         sudo apt-get -y install libavformat-dev

      - name: Build
        run: dotnet build -c Debug -warnaserror

      - name: Test
        run: dotnet test $pwd/tests/bin/Debug/*/*.Tests.dll --settings $pwd/build/vstestconfig.runsettings --logger "trx;LogFileName=TestResults-${{matrix.os.prettyName}}.trx"
        shell: pwsh

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: libyambar-test-results-${{matrix.os.prettyName}}
          path: ${{github.workspace}}/TestResults/TestResults-${{matrix.os.prettyName}}.trx
